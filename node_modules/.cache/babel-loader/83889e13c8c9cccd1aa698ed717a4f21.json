{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      postsData: [{\n        id: 1,\n        message: \"Hello, whats up?\",\n        likes: 20\n      }, {\n        id: 2,\n        message: \"It's my birthday today\",\n        likes: 30\n      }],\n      newPostText: \"\"\n    },\n    dialogsPage: {\n      dialogsData: [{\n        id: 1,\n        name: \"Asik\"\n      }, {\n        id: 2,\n        name: \"Beka\"\n      }, {\n        id: 3,\n        name: \"Azik\"\n      }, {\n        id: 4,\n        name: \"Baur\"\n      }],\n      messagesData: [{\n        id: 1,\n        message: \"Hello\"\n      }, {\n        id: 2,\n        message: \"Hi\"\n      }, {\n        id: 3,\n        message: \"Fuck you\"\n      }, {\n        id: 4,\n        message: \"Bitch\"\n      }],\n      newMessageText: ''\n    },\n    navBar: {\n      friends: [{\n        id: 1,\n        name: \"Asik\",\n        avatar: \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\"\n      }, {\n        id: 2,\n        name: \"Beka\",\n        avatar: \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\"\n      }, {\n        id: 3,\n        name: \"Azik\",\n        avatar: \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\"\n      }, {\n        id: 4,\n        name: \"Baur\",\n        avatar: \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\"\n      }]\n    }\n  },\n\n  _callSubscriber() {},\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likes: 0\n      };\n\n      this._state.profilePage.postsData.push(newPost);\n\n      this._state.profilePage.newPostText = \"\";\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n      this._state.dialogsPage.newMessageText = action.text;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let newMessage = this._state.dialogsPage.newMessageText;\n\n      this._state.dialogsPage.messagesData.push({\n        id: 4,\n        message: newMessage\n      });\n\n      this._callSubscriber(this._state);\n\n      this._state.dialogsPage.newMessageText = '';\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  text: text\n});\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageTextCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  text: text\n});\nwindow.store = store;\nexport default store;","map":{"version":3,"names":["store","_state","profilePage","postsData","id","message","likes","newPostText","dialogsPage","dialogsData","name","messagesData","newMessageText","navBar","friends","avatar","_callSubscriber","getState","subscribe","observer","dispatch","action","type","ADD_POST","newPost","push","UPDATE_NEW_POST_TEXT","newText","UPDATE_NEW_MESSAGE_TEXT","text","SEND_MESSAGE","newMessage","addPostActionCreator","updateNewPostTextActionCreator","sendMessageCreator","updateNewMessageTextCreator","window"],"sources":["/Users/bekzatabilkassymov/Desktop/REACT APP/my-app/src/redux/state.js"],"sourcesContent":["\n\n\nlet store = {\n    _state: {\n        profilePage: {\n            postsData: [\n                {id: 1, message: \"Hello, whats up?\", likes: 20},\n                {id: 2, message: \"It's my birthday today\", likes: 30},\n            ],\n            newPostText: \"\",\n        },\n        dialogsPage: {\n            dialogsData: [\n                {id: 1, name: \"Asik\"},\n                {id: 2, name: \"Beka\"},\n                {id: 3, name: \"Azik\"},\n                {id: 4, name: \"Baur\"},\n            ],\n            messagesData: [\n                {id: 1, message: \"Hello\"},\n                {id: 2, message: \"Hi\"},\n                {id: 3, message: \"Fuck you\"},\n                {id: 4, message: \"Bitch\"},\n            ],\n            newMessageText: ''\n        },\n        navBar: {\n            friends: [\n                {\n                    id: 1,\n                    name: \"Asik\",\n                    avatar:\n                        \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\",\n                },\n                {\n                    id: 2,\n                    name: \"Beka\",\n                    avatar:\n                        \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\",\n                },\n                {\n                    id: 3,\n                    name: \"Azik\",\n                    avatar:\n                        \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\",\n                },\n                {\n                    id: 4,\n                    name: \"Baur\",\n                    avatar:\n                        \"https://w7.pngwing.com/pngs/236/25/png-transparent-computer-icons-avatar-friends-love-text-logo.png\",\n                },\n            ],\n        },\n    },\n\n\n    _callSubscriber() {\n    },\n\n    getState() {\n        return this._state\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer\n    },\n\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                likes: 0,\n            };\n            this._state.profilePage.postsData.push(newPost);\n            this._state.profilePage.newPostText = \"\";\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_MESSAGE_TEXT){\n            this._state.dialogsPage.newMessageText = action.text\n            this._callSubscriber(this._state)\n        } else if (action.type === SEND_MESSAGE) {\n            let newMessage = this._state.dialogsPage.newMessageText\n            this._state.dialogsPage.messagesData.push({id: 4, message: newMessage})\n            this._callSubscriber(this._state)\n            this._state.dialogsPage.newMessageText = ''\n        }\n    }\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST })\n\n\nexport const updateNewPostTextActionCreator = (text) => (\n    { type: UPDATE_NEW_POST_TEXT, text: text }\n)\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE })\nexport const updateNewMessageTextCreator = (text) => ({ type: UPDATE_NEW_MESSAGE_TEXT, text: text })\nwindow.store = store;\n\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module"}