{"ast":null,"code":"var _jsxFileName = \"/Users/bekzatabilkassymov/Desktop/REACT APP/my-app/src/components/Dialogs/Dialogs.jsx\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"@types/react\";\nimport { updateNewMessageTextCreator } from \"../../redux/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let dialogElements = props.dialogsPage.dialogsData.map(dialog => {\n    return /*#__PURE__*/_jsxDEV(DialogItem, {\n      name: dialog.name,\n      id: dialog.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  });\n  let messageElements = props.dialogsPage.messagesData.map(msg => {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      message: msg.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  });\n  let newMessageElement = React.createRef();\n\n  let newMessageChange = () => {\n    let newMessage = newMessageElement.current.value;\n    let action = updateNewMessageTextCreator(newMessage);\n    props.dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogsItems,\n      children: dialogElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messageElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.myMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: newMessageChange,\n          placeholder: \"Enter your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('asd'),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["classes","DialogItem","Message","React","updateNewMessageTextCreator","Dialogs","props","dialogElements","dialogsPage","dialogsData","map","dialog","name","id","messageElements","messagesData","msg","message","newMessageElement","createRef","newMessageChange","newMessage","current","value","action","dispatch","dialogs","dialogsItems","messages","myMessage","alert"],"sources":["/Users/bekzatabilkassymov/Desktop/REACT APP/my-app/src/components/Dialogs/Dialogs.jsx"],"sourcesContent":["import classes from \"./Dialogs.module.css\";\n\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"@types/react\";\nimport {updateNewMessageTextCreator} from \"../../redux/state\";\n\n\nconst Dialogs = (props) => {\n\n\n    let dialogElements = props.dialogsPage.dialogsData.map((dialog) => {\n        return <DialogItem name={dialog.name} id={dialog.id}/>;\n    });\n\n    let messageElements = props.dialogsPage.messagesData.map((msg) => {\n        return <Message message={msg.message}/>;\n    });\n\n    let newMessageElement = React.createRef();\n\n    let newMessageChange = () => {\n        let newMessage = newMessageElement.current.value\n        let action = updateNewMessageTextCreator(newMessage)\n        props.dispatch(action)\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>{dialogElements}</div>\n            <div className={classes.messages}>\n                <div>{messageElements}</div>\n                <div className={classes.myMessage}>\n                    <textarea onChange={newMessageChange} placeholder=\"Enter your message\"/>\n                    <button onClick={() => alert('asd')}>Send</button>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Dialogs;\n"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAAQC,2BAAR,QAA0C,mBAA1C;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAGvB,IAAIC,cAAc,GAAGD,KAAK,CAACE,WAAN,CAAkBC,WAAlB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;IAC/D,oBAAO,QAAC,UAAD;MAAY,IAAI,EAAEA,MAAM,CAACC,IAAzB;MAA+B,EAAE,EAAED,MAAM,CAACE;IAA1C;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFoB,CAArB;EAIA,IAAIC,eAAe,GAAGR,KAAK,CAACE,WAAN,CAAkBO,YAAlB,CAA+BL,GAA/B,CAAoCM,GAAD,IAAS;IAC9D,oBAAO,QAAC,OAAD;MAAS,OAAO,EAAEA,GAAG,CAACC;IAAtB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFqB,CAAtB;EAIA,IAAIC,iBAAiB,GAAGf,KAAK,CAACgB,SAAN,EAAxB;;EAEA,IAAIC,gBAAgB,GAAG,MAAM;IACzB,IAAIC,UAAU,GAAGH,iBAAiB,CAACI,OAAlB,CAA0BC,KAA3C;IACA,IAAIC,MAAM,GAAGpB,2BAA2B,CAACiB,UAAD,CAAxC;IACAf,KAAK,CAACmB,QAAN,CAAeD,MAAf;EACH,CAJD;;EAMA,oBACI;IAAK,SAAS,EAAExB,OAAO,CAAC0B,OAAxB;IAAA,wBACI;MAAK,SAAS,EAAE1B,OAAO,CAAC2B,YAAxB;MAAA,UAAuCpB;IAAvC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAEP,OAAO,CAAC4B,QAAxB;MAAA,wBACI;QAAA,UAAMd;MAAN;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAEd,OAAO,CAAC6B,SAAxB;QAAA,wBACI;UAAU,QAAQ,EAAET,gBAApB;UAAsC,WAAW,EAAC;QAAlD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAE,MAAMU,KAAK,CAAC,KAAD,CAA5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAhCD;;KAAMzB,O;AAkCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}