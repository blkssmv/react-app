{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nlet initialState = {\n  postsData: [{\n    id: 1,\n    message: \"Hello, whats up?\",\n    likes: 20\n  }, {\n    id: 2,\n    message: \"It's my birthday today\",\n    likes: 30\n  }],\n  newPostText: \"\"\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likes: 0\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.postsData = [...state.postsData];\n        stateCopy.postsData.push(newPost);\n        stateCopy.newPostText = \"\";\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostText = action.text;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  text: text\n});\nexport default profileReducer;","map":{"version":3,"names":["ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postsData","id","message","likes","newPostText","profileReducer","state","action","type","newPost","stateCopy","push","text","addPostActionCreator","updateNewPostTextActionCreator"],"sources":["/Users/bekzatabilkassymov/Documents/GitHub/react-app/src/redux/profile-reducer.js"],"sourcesContent":["const ADD_POST = \"ADD-POST\"\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\"\n\n\n\nlet initialState = {\n    postsData: [\n        {id: 1, message: \"Hello, whats up?\", likes: 20},\n        {id: 2, message: \"It's my birthday today\", likes: 30},\n    ],\n    newPostText: \"\",\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:{\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                likes: 0,\n            };\n            let stateCopy = {...state}\n            stateCopy.postsData = [...state.postsData]\n            stateCopy.postsData.push(newPost);\n            stateCopy.newPostText = \"\";\n            return stateCopy\n        }\n        case UPDATE_NEW_POST_TEXT:{\n            let stateCopy = {...state}\n            stateCopy.newPostText = action.text;\n            return stateCopy\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST })\n\n\nexport const updateNewPostTextActionCreator = (text) => (\n    { type: UPDATE_NEW_POST_TEXT, text: text }\n)\nexport default profileReducer"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAIA,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE,CACP;IAACC,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,kBAAjB;IAAqCC,KAAK,EAAE;EAA5C,CADO,EAEP;IAACF,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,wBAAjB;IAA2CC,KAAK,EAAE;EAAlD,CAFO,CADI;EAKfC,WAAW,EAAE;AALE,CAAnB;;AAQA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKX,QAAL;MAAc;QACV,IAAIY,OAAO,GAAG;UACVR,EAAE,EAAE,CADM;UAEVC,OAAO,EAAEI,KAAK,CAACF,WAFL;UAGVD,KAAK,EAAE;QAHG,CAAd;QAKA,IAAIO,SAAS,GAAG,EAAC,GAAGJ;QAAJ,CAAhB;QACAI,SAAS,CAACV,SAAV,GAAsB,CAAC,GAAGM,KAAK,CAACN,SAAV,CAAtB;QACAU,SAAS,CAACV,SAAV,CAAoBW,IAApB,CAAyBF,OAAzB;QACAC,SAAS,CAACN,WAAV,GAAwB,EAAxB;QACA,OAAOM,SAAP;MACH;;IACD,KAAKZ,oBAAL;MAA0B;QACtB,IAAIY,SAAS,GAAG,EAAC,GAAGJ;QAAJ,CAAhB;QACAI,SAAS,CAACN,WAAV,GAAwBG,MAAM,CAACK,IAA/B;QACA,OAAOF,SAAP;MACH;;IAED;MACI,OAAOJ,KAAP;EApBR;AAsBH,CAvBD;;AAyBA,OAAO,MAAMO,oBAAoB,GAAG,OAAO;EAAEL,IAAI,EAAEX;AAAR,CAAP,CAA7B;AAGP,OAAO,MAAMiB,8BAA8B,GAAIF,IAAD,KAC1C;EAAEJ,IAAI,EAAEV,oBAAR;EAA8Bc,IAAI,EAAEA;AAApC,CAD0C,CAAvC;AAGP,eAAeP,cAAf"},"metadata":{},"sourceType":"module"}