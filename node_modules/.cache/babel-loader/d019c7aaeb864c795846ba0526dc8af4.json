{"ast":null,"code":"var _jsxFileName = \"/Users/bekzatabilkassymov/Documents/GitHub/react-app/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from \"react\";\nimport { sendMessageCreator, updateNewMessageTextCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsContainer = props => {\n  let state = props.store.getState().dialogsPage; // let dialogElements = state.dialogsData.map((dialog, index) => {\n  //     return <DialogItem key={index} name={dialog.name} id={dialog.id}/>;\n  // });\n  //\n  // let messageElements = state.messagesData.map((msg, index) => {\n  //     return <Message key={index} message={msg.message}/>;\n  // });\n\n  let newMessageText = state.newMessageText;\n\n  let sendMessage = () => {\n    props.store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageChange = text => {\n    props.store.dispatch(updateNewMessageTextCreator(text));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    store: props.store,\n    updateNewMessageText: onNewMessageChange,\n    sendMessage: sendMessage,\n    newMessageText: newMessageText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogsContainer;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"names":["React","sendMessageCreator","updateNewMessageTextCreator","Dialogs","DialogsContainer","props","state","store","getState","dialogsPage","newMessageText","sendMessage","dispatch","onNewMessageChange","text"],"sources":["/Users/bekzatabilkassymov/Documents/GitHub/react-app/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["\nimport React from \"react\";\nimport {sendMessageCreator, updateNewMessageTextCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\n\n\nconst DialogsContainer = (props) => {\n    let state = props.store.getState().dialogsPage\n\n\n    // let dialogElements = state.dialogsData.map((dialog, index) => {\n    //     return <DialogItem key={index} name={dialog.name} id={dialog.id}/>;\n    // });\n    //\n    // let messageElements = state.messagesData.map((msg, index) => {\n    //     return <Message key={index} message={msg.message}/>;\n    // });\n\n    let newMessageText = state.newMessageText\n\n\n    let sendMessage = () => {\n        props.store.dispatch(sendMessageCreator())\n    }\n\n\n\n    let onNewMessageChange = (text) => {\n        props.store.dispatch(updateNewMessageTextCreator(text))\n    }\n\n    return (\n        <Dialogs store={props.store} updateNewMessageText={onNewMessageChange} sendMessage={sendMessage} newMessageText={newMessageText}/>\n    );\n};\n\nexport default DialogsContainer;\n"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA4BC,2BAA5B,QAA8D,6BAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAChC,IAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC,CADgC,CAIhC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,cAAc,GAAGJ,KAAK,CAACI,cAA3B;;EAGA,IAAIC,WAAW,GAAG,MAAM;IACpBN,KAAK,CAACE,KAAN,CAAYK,QAAZ,CAAqBX,kBAAkB,EAAvC;EACH,CAFD;;EAMA,IAAIY,kBAAkB,GAAIC,IAAD,IAAU;IAC/BT,KAAK,CAACE,KAAN,CAAYK,QAAZ,CAAqBV,2BAA2B,CAACY,IAAD,CAAhD;EACH,CAFD;;EAIA,oBACI,QAAC,OAAD;IAAS,KAAK,EAAET,KAAK,CAACE,KAAtB;IAA6B,oBAAoB,EAAEM,kBAAnD;IAAuE,WAAW,EAAEF,WAApF;IAAiG,cAAc,EAAED;EAAjH;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CA5BD;;KAAMN,gB;AA8BN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}