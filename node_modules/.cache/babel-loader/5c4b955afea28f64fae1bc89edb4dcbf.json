{"ast":null,"code":"var _jsxFileName = \"/Users/bekzatabilkassymov/Documents/GitHub/react-app/src/components/Profile/MyPosts/MyPostsContainer.jsx\";\nimport React from \"react\";\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport StoreContext from \"../../../store-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPostsContainer = props => {\n  let state = props.store.getState().profilePage;\n\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = text => {\n    let action = updateNewPostTextActionCreator(text);\n    props.store.dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: [value => this.store, /*#__PURE__*/_jsxDEV(MyPosts, {\n      updateNewPostText: onPostChange,\n      addPost: addPost,\n      posts: state.postsData,\n      newPostText: state.newPostText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyPostsContainer;\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","StoreContext","MyPostsContainer","props","state","store","getState","profilePage","addPost","dispatch","onPostChange","text","action","value","postsData","newPostText"],"sources":["/Users/bekzatabilkassymov/Documents/GitHub/react-app/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport StoreContext from \"../../../store-context\";\n\n\nconst MyPostsContainer = (props) => {\n    let state = props.store.getState().profilePage\n\n    let addPost = () => {\n        props.store.dispatch(addPostActionCreator())\n    }\n\n    let onPostChange = (text) => {\n        let action = updateNewPostTextActionCreator(text);\n        props.store.dispatch(action)\n    }\n\n\n    return (\n        <StoreContext.Consumer>\n          {value => this.store}\n            <MyPosts updateNewPostText={onPostChange} addPost={addPost} posts={state.postsData}\n                     newPostText={state.newPostText}/>\n        </StoreContext.Consumer>\n\n    );\n};\nexport default MyPostsContainer;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,EAA8BC,8BAA9B,QAAmE,gCAAnE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAChC,IAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;;EAEA,IAAIC,OAAO,GAAG,MAAM;IAChBL,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBX,oBAAoB,EAAzC;EACH,CAFD;;EAIA,IAAIY,YAAY,GAAIC,IAAD,IAAU;IACzB,IAAIC,MAAM,GAAGb,8BAA8B,CAACY,IAAD,CAA3C;IACAR,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBG,MAArB;EACH,CAHD;;EAMA,oBACI,QAAC,YAAD,CAAc,QAAd;IAAA,WACGC,KAAK,IAAI,KAAKR,KADjB,eAEI,QAAC,OAAD;MAAS,iBAAiB,EAAEK,YAA5B;MAA0C,OAAO,EAAEF,OAAnD;MAA4D,KAAK,EAAEJ,KAAK,CAACU,SAAzE;MACS,WAAW,EAAEV,KAAK,CAACW;IAD5B;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CArBD;;KAAMb,gB;AAsBN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}